description: a union of genes or gene products. Frequently an identifier for one will
  be used as proxy for another
display_name: !!python/object/new:metamodel.metamodel.ClassDefinitionName [gene or
    gene product]
document_category: !!python/object/new:metamodel.metamodel.ClassDefinitionName [gene
    or gene product]
fields:
- description: A unique identifier for a thing. Must be either a CURIE shorthand for
    a URI or a complete URI
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [id]
  id: id
- description: Name of the high level ontology class in which this entity is categorized.
    Corresponds to the label for the biolink entity type class. In a neo4j database
    this MAY correspond to the neo4j label tag
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [category]
  id: category
- description: A grouping for any relationship type that holds between any two things
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [related
      to]
  id: related_to
- description: A grouping for any property that holds between a node and a value
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [node property]
  id: node_property
- description: An IRI for the node. This is determined by the id using expansion rules.
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [iri]
  id: iri
- description: a long-form human readable name for a thing
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [full name]
  id: full_name
- description: a human-readable description of a thing
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [description]
  id: description
- description: more commonly used for gene symbols in yeast
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [systematic
      synonym]
  id: systematic_synonym
- description: 'holds between a biological entity and a phenotype, where a phenotype
    is construed broadly as any kind of quality of an organism part, a collection
    of these qualities, or a change in quality or qualities (e.g. abnormally increased
    temperature). '
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [has phenotype]
  id: has_phenotype
- description: connects a thing to a class representing a taxon
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [in taxon]
  id: in_taxon
- cardinality: multi
  description: Ancestors (reflexive) of the object field following is_a (subClassOf)
    and part-of links. This is typically used as a query constraint and for faceting.
    The combination of is_a and part of is a common pattern, and can be used in gene
    expression queries (finding genes that are expressed in a structure, a subtype,
    or a part of that structure) or in GO queries (in any of the three branches of
    GO)
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [isa partof
      closure]
  id: isa_partof_closure
- cardinality: multi
  description: 'parent field for fields used for storing the label of the closure
    concept. See also: closure concept field'
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [isa partof
      closure label]
  id: isa_partof_closure_label
- cardinality: multi
  description: Ancestors (reflexive) of the object field following is_a (subClassOf),
    part-of and regulates (including positive and negative) relationships. This is
    typically used as a query constraint and for faceting where the range is a biological
    process
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [regulates
      closure]
  id: regulates_closure
- cardinality: multi
  description: 'parent field for fields used for storing the label of the closure
    concept. See also: closure concept field'
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [regulates
      closure label]
  id: regulates_closure_label
- description: holds between two entities that make physical contact as part of some
    interaction
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [molecularly
      interacts with]
  id: molecularly_interacts_with
- description: describes an entity that has a direct affect on the state or quality
    of another existing entity. Use of the 'affects' predicate implies that the affected
    entity already exists, unlike predicates such as 'affects risk for' and 'prevents,
    where the outcome is something that may or may not come to be.
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName ['regulates,
      entity to entity']
  id: regulates_entity_to_entity
- description: holds between a measurable molecular entity and a disease or phenotypic
    feature, where the entity is used as an indicator of the presence or state of
    the disease or feature.
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [biomarker
      for]
  id: biomarker_for
- description: connects a genomic feature to its sequence
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [has biological
      sequence]
  id: has_biological_sequence
- description: genes are typically designated by a short symbol and a full name. We
    map the symbol to the default display name and use an additional slot for full
    name
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [macromolecular
      machine name]
  id: name
- description: holds between two genes or gene products that are part of in the same
    biological pathway
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [in pathway
      with]
  id: in_pathway_with
- description: holds between two genes or gene products that are part of (or code
    for products that are part of) in the same macromolecular complex
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [in complex
      with]
  id: in_complex_with
- description: 'holds between two genes or gene products that are expressed in the
    same cell type or population '
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [in cell
      population with]
  id: in_cell_population_with
- description: holds between a gene or gene product and an anatomical entity in which
    it is expressed
  display_name: !!python/object/new:metamodel.metamodel.SlotDefinitionName [expressed
      in]
  id: expressed_in
id: gene_or_gene_product
schema_generating: true
weight: 20
