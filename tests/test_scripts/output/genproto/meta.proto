// Attributed description
message AltDescription
 {
  optional description String = 1
  optional source String = 2
 }
// A class or interface
message ClassDefinition
 {
  optional name String = 1
  optional singularName String = 2
  optional description String = 3
  optional note String = 4
  optional comment String = 5
  repeated examples Example = 6
  optional seeAlso String = 7
  repeated flags String = 8
  repeated aliases String = 9
  repeated mappings String = 10
  repeated idPrefixes String = 11
  repeated inSubset String = 12
  optional fromSchema String = 13
  repeated altDescriptions AltDescription = 14
  optional mixin Boolean = 15
  optional abstract Boolean = 16
  repeated localNames String = 17
  optional subclassOf Uri = 18
  repeated valuesFrom String = 19
  optional symmetric Boolean = 20
  repeated definingSlots SlotDefinition = 21
  repeated slots SlotDefinition = 22
  repeated slotUsage SlotDefinition = 23
  optional applyTo ClassDefinition = 24
  optional entity Boolean = 25
  optional isA ClassDefinition = 26
  repeated mixins ClassDefinition = 27
  repeated unionOf ClassDefinition = 28
 }
// example of usage
message Example
 {
  optional value String = 1
  optional description String = 2
 }
// Prefix URI map
message Prefix
 {
  optional localName String = 1
  optional prefixUri String = 2
 }
// A collection of definitions
message SchemaDefinition
 {
  optional name String = 1
  optional singularName String = 2
  optional description String = 3
  optional note String = 4
  optional comment String = 5
  repeated examples Example = 6
  optional seeAlso String = 7
  repeated flags String = 8
  repeated aliases String = 9
  repeated mappings String = 10
  repeated idPrefixes String = 11
  repeated inSubset String = 12
  optional fromSchema String = 13
  repeated altDescriptions AltDescription = 14
  optional isA Definition = 15
  optional mixin Boolean = 16
  repeated mixins Definition = 17
  optional abstract Boolean = 18
  repeated localNames String = 19
  repeated unionOf Definition = 20
  optional subclassOf Uri = 21
  repeated valuesFrom String = 22
  optional symmetric Boolean = 23
  optional id String = 24
  optional version String = 25
  repeated imports String = 26
  optional license String = 27
  repeated prefixes Prefix = 28
  optional defaultPrefix String = 29
  optional defaultType TypeDefinition = 30
  repeated defaultCuriMaps String = 31
  repeated types TypeDefinition = 32
  repeated slots SlotDefinition = 33
  repeated classes ClassDefinition = 34
  optional metamodelVersion String = 35
  optional sourceFile String = 36
  optional sourceFileSize Integer = 37
  optional sourceFileDate String = 38
  optional generationDate Date = 39
 }
// A property or slot
message SlotDefinition
 {
  optional name String = 1
  optional singularName String = 2
  optional description String = 3
  optional note String = 4
  optional comment String = 5
  repeated examples Example = 6
  optional seeAlso String = 7
  repeated flags String = 8
  repeated aliases String = 9
  repeated mappings String = 10
  repeated idPrefixes String = 11
  repeated inSubset String = 12
  optional fromSchema String = 13
  repeated altDescriptions AltDescription = 14
  optional mixin Boolean = 15
  optional abstract Boolean = 16
  repeated localNames String = 17
  optional subclassOf Uri = 18
  repeated valuesFrom String = 19
  optional symmetric Boolean = 20
  optional multivalued Boolean = 21
  optional domain ClassDefinition = 22
  optional range Anytype = 23
  optional required Boolean = 24
  optional objectProperty Boolean = 25
  optional inlined Boolean = 26
  optional primaryKey Boolean = 27
  optional identifier Boolean = 28
  optional definitional Boolean = 29
  optional alias String = 30
  optional path String = 31
  optional subpropertyOf SlotDefinition = 32
  optional inverse SlotDefinition = 33
  optional isClassField Boolean = 34
  optional role String = 35
  optional inherited Boolean = 36
  optional isA SlotDefinition = 37
  repeated mixins SlotDefinition = 38
  repeated unionOf SlotDefinition = 39
 }
// A type definition
message TypeDefinition
 {
  optional name String = 1
  optional singularName String = 2
  optional description String = 3
  optional note String = 4
  optional comment String = 5
  repeated examples Example = 6
  optional seeAlso String = 7
  repeated flags String = 8
  repeated aliases String = 9
  repeated mappings String = 10
  repeated idPrefixes String = 11
  repeated inSubset String = 12
  optional fromSchema String = 13
  repeated altDescriptions AltDescription = 14
  optional typeof String = 15
 }

