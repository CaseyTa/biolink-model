description: A property or slot
display_name: slot definition
document_category: slot definition
fields:
- {description: 'a unique key that identifies a slot, type or class in a schema',
  display_name: name, id: name}
- {description: a name that is used in the singular form, display_name: singular_name,
  id: singular_name}
- {description: a description, display_name: description, id: description}
- {description: Notes about an element, display_name: note, id: note}
- {description: Comment about an element, display_name: comment, id: comment}
- {cardinality: multi, description: Example of usage for a slot or class, display_name: examples,
  id: examples}
- {display_name: see_also, id: see_also}
- {cardinality: multi, description: State information and other details, display_name: flags,
  id: flags}
- {cardinality: multi, description: list of ID/CURIE prefixes applicable to that element,
  display_name: prefixes, id: prefixes}
- {cardinality: multi, display_name: aliases, id: aliases}
- {cardinality: multi, description: list of equivalent or skos exact mappings to an
    ontology class, display_name: mappings, id: mappings}
- {cardinality: multi, display_name: id_prefixes, id: id_prefixes}
- {cardinality: multi, description: used to indicate membership of a term in a defined
    subset of biolink terms used for a particular domain or application (e.g. the
    translator_minimal subset holding the minimal set of predicates used in a translator
    knowledge graph), display_name: in_subset, id: in_subset}
- {description: id of the schema that the element was derived from.  Supplied by the
    loader., display_name: from_schema, id: from_schema}
- {cardinality: multi, display_name: alt_descriptions, id: alt_descriptions}
- {description: 'specifies single-inheritance between classes and slots. While multiple
    inheritance is not allowed, mixins can be provided effectively providing the same
    thing. The semantics are the same when translated to formalisms that allow MI
    (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python
    classes) then is_a is used. When translating a framework without polymorphism
    (e.g. json-schema, solr document schema) then is_a and mixins are recursively
    unfolded', display_name: is_a, id: is_a}
- {description: Used only as a mixin -- cannot be instantiated on its own., display_name: mixin,
  id: mixin}
- {cardinality: multi, description: List of definitions to be mixed in. Targets may
    be any definition of the same type, display_name: mixins, id: mixins}
- {description: 'An abstract class is a high level class or slot that is typically
    used to group common slots together and is generally not instantiated. When generating
    golr-views, abstract classes are ignored', display_name: abstract, id: abstract}
- {cardinality: multi, description: map from local identifier to slot, display_name: local_names,
  id: local_names}
- {cardinality: multi, description: list of class or slot definitions that are combined
    to create the union class, display_name: union_of, id: union_of}
- {description: Ontolgy property which this is a subclass of. Not to be confused with
    is_a which links datamodel classes, display_name: subclass_of, id: subclass_of}
- {cardinality: multi, description: identifies the possible uri's of the range, display_name: values_from,
  id: values_from}
- {description: Symmetric slot, display_name: symmetric, id: symmetric}
- {description: If true slot can have many values, display_name: multivalued, id: multivalued}
- {description: The class to which this slot applies., display_name: domain, id: domain}
- {description: 'The slot type.  If absent, it is the builtin type ''string''', display_name: range,
  id: range}
- {description: If true slot must have at least one value, display_name: required,
  id: required}
- {description: if true then the value of this slot is inlined (i.e. a nested object)
    rather linked by key, display_name: inlined, id: inlined}
- {description: True means that this serves as a unique identifier, display_name: primary_key,
  id: primary_key}
- {description: True means that this slot must be unique across the collection of
    slots, display_name: identifier, id: identifier}
- {description: slot is a defining slot -- injection into the defining_slots list,
  display_name: definitional, id: definitional}
- {description: A name to be assigned to the slot in implementations that is different
    that its type.  The primary use for this is to allow class AND schema definitions
    to both have "slots" where one inline and the other a reference, display_name: alias,
  id: alias}
- {description: 'For any denormalized slot, this represents the tree or graph path
    used to generate the denormalized form', display_name: path, id: path}
- {description: Ontolgy property which this is a subproperty of, display_name: subproperty_of,
  id: subproperty_of}
- {description: used to indicate the inverse of a slot (e.g. 'expresses' is the inverse
    predicate of 'expressed in'), display_name: inverse, id: inverse}
- {display_name: is_class_field, id: is_class_field}
- {description: True means that the slot is local and is not_inherited across is_a
    or slot_usage paths, display_name: not_inherited, id: not_inherited}
- {display_name: role, id: role}
id: slot_definition
schema_generating: true
weight: 20
