type RelationshipType {
}

type HomologyRelationshipType {
}

type InteractionRelationshipType {
}

type SeverityValue {
  label: String
  id: String!
}

type NamedThing {
  label: String
  id: String!
}

type OntologyClass {
  label: String
  id: String!
}

type GeneOntologyClass {
  label: String
  id: String!
}

type ThingWithTaxon {
  inTaxon: OrganismTaxon
}

type OrganismTaxon {
  label: String
  id: String!
}

type IndividualOrganism implements ThingWithTaxon {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Case {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type PopulationOfIndividualOrganisms implements ThingWithTaxon {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Cohort {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Biosample implements ThingWithTaxon {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type DiseaseOrPhenotypicFeature implements ThingWithTaxon {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Disease {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type PhenotypicFeature {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Environment {
  label: String
  id: String!
}

type InformationContentEntity {
  label: String
  id: String!
}

type EvidenceType {
  label: String
  id: String!
}

type Publication {
  label: String
  id: String!
}

type Provider {
}

type MolecularEntity implements ThingWithTaxon {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type ChemicalSubstance {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Attribute {
}

type AnatomicalEntity implements ThingWithTaxon {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type LifeStage implements ThingWithTaxon {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type HasGenomicName {
  systematicSynonym: String
  fullName: String
}

type GenomicEntity {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Transcript {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Exon {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type CodingSequence {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type GeneOrGeneProduct {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Gene {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type GeneProduct {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Protein {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type RnaProduct {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type MacromolecularComplex {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type GeneGrouping {
}

type GeneFamily implements GeneGrouping {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Zygosity {
}

type Genotype {
  label: String
  inTaxon: OrganismTaxon
  hasZygosity: Zygosity
  id: String!
}

type SequenceVariant {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type DrugExposure {
  label: String
  id: String!
  drug: [String]!
}

type Treatment {
  label: String
  treats: DiseaseOrPhenotypicFeature!
  id: String!
  hasExposureParts: [DrugExposure]!
}

type GeographicLocation {
  longitude: String
  latitude: String
}

type GeographicLocationAtTime {
  timepoint: String
  longitude: String
  latitude: String
}

type Association {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: String!
  object: String!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GenotypeToGenotypePartAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Genotype!
  object: Genotype!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GenotypeToGeneAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Genotype!
  object: Gene!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GenotypeToVariantAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Genotype!
  object: SequenceVariant!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GeneToGeneAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: GeneOrGeneProduct!
  object: GeneOrGeneProduct!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GeneToGeneHomologyAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: GeneOrGeneProduct!
  object: GeneOrGeneProduct!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: HomologyRelationshipType!
}

type MolecularInteraction {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: String!
  object: String!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: InteractionRelationshipType!
}

type PairwiseGeneOrProteinInteractionAssociation implements MolecularInteraction {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: GeneOrGeneProduct!
  object: GeneOrGeneProduct!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: InteractionRelationshipType!
}

type ChemicalToThingAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: ChemicalSubstance!
  object: String!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type CaseToThingAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Case!
  object: String!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type ChemicalToGeneAssociation implements ChemicalToThingAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: ChemicalSubstance!
  object: GeneProduct!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type ChemicalToDiseaseOrPhenotypicFeatureAssociation implements ChemicalToThingAssociation, ThingToDiseaseOrPhenotypicFeatureAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: ChemicalSubstance!
  object: DiseaseOrPhenotypicFeature!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type BiosampleToThingAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Biosample!
  object: String!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type BiosampleToDiseaseOrPhenotypicFeatureAssociation implements BiosampleToThingAssociation, ThingToDiseaseOrPhenotypicFeatureAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Biosample!
  object: DiseaseOrPhenotypicFeature!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type EntityToPhenotypicFeatureAssociation {
  hasEvidenceType: EvidenceType
  onsetQualifier: LifeStage
  severityQualifier: SeverityValue
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: String!
  object: PhenotypicFeature!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  relation: RelationshipType!
  qualifiers: [OntologyClass]
  frequencyQualifier: String
}

type ThingToDiseaseOrPhenotypicFeatureAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: String!
  object: DiseaseOrPhenotypicFeature!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type DiseaseToThingAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Disease!
  object: String!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GenotypeToPhenotypicFeatureAssociation implements EntityToPhenotypicFeatureAssociation, GenotypeToThingAssociation {
  hasEvidenceType: EvidenceType
  onsetQualifier: LifeStage
  severityQualifier: SeverityValue
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Genotype!
  object: PhenotypicFeature!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  relation: RelationshipType!
  qualifiers: [OntologyClass]
  frequencyQualifier: String
}

type EnvironmentToPhenotypicFeatureAssociation implements EntityToPhenotypicFeatureAssociation {
  hasEvidenceType: EvidenceType
  onsetQualifier: LifeStage
  severityQualifier: SeverityValue
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Environment!
  object: PhenotypicFeature!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  relation: RelationshipType!
  qualifiers: [OntologyClass]
  frequencyQualifier: String
}

type DiseaseToPhenotypicFeatureAssociation implements EntityToPhenotypicFeatureAssociation, DiseaseToThingAssociation {
  hasEvidenceType: EvidenceType
  onsetQualifier: LifeStage
  severityQualifier: SeverityValue
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Disease!
  object: PhenotypicFeature!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  relation: RelationshipType!
  qualifiers: [OntologyClass]
  frequencyQualifier: String
}

type CaseToPhenotypicFeatureAssociation implements EntityToPhenotypicFeatureAssociation, CaseToThingAssociation {
  hasEvidenceType: EvidenceType
  onsetQualifier: LifeStage
  severityQualifier: SeverityValue
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Case!
  object: PhenotypicFeature!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  relation: RelationshipType!
  qualifiers: [OntologyClass]
  frequencyQualifier: String
}

type GeneToThingAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: GeneOrGeneProduct!
  object: String!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GeneToPhenotypicFeatureAssociation implements EntityToPhenotypicFeatureAssociation, GeneToThingAssociation {
  hasEvidenceType: EvidenceType
  onsetQualifier: LifeStage
  severityQualifier: SeverityValue
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: GeneOrGeneProduct!
  object: PhenotypicFeature!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  relation: RelationshipType!
  qualifiers: [OntologyClass]
  frequencyQualifier: String
}

type GenotypeToThingAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Genotype!
  object: String!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GeneToExpressionSiteAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: GeneOrGeneProduct!
  object: AnatomicalEntity!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  stageQualifier: LifeStage
  quantifierQualifier: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type SequenceVariantModulatesTreatmentAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: SequenceVariant!
  object: Treatment!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GoAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: MolecularEntity!
  object: GeneOntologyClass!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type DenormalizedAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: String!
  subjectTaxonLabel: String
  subjectTaxonClosure: [OntologyClass]
  object: String!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  subjectTaxon: OrganismTaxon
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  subjectTaxonClosureLabel: [String]
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type DiseaseToPhenotypicFeatureDenormalizedAssociation {
  hasEvidenceType: EvidenceType
  onsetQualifier: LifeStage
  severityQualifier: SeverityValue
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Disease!
  object: PhenotypicFeature!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  relation: RelationshipType!
  qualifiers: [OntologyClass]
  frequencyQualifier: String
}

type AssociationResultSet {
  associations: [Association]
}

type PropertyValuePair {
  filler: NamedThing
  relation: RelationshipType!
}

type GenomicSequenceLocalization {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: GenomicEntity!
  object: GenomicEntity!
  endInterbaseCoordinate: String
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  startInterbaseCoordinate: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  genomeBuild: String
  phase: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type SequenceFeatureRelationship {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: GenomicEntity!
  object: GenomicEntity!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type TranscriptToGeneRelationship {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Transcript!
  object: Gene!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GeneToGeneProductRelationship {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Gene!
  object: GeneProduct!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type ExonToTranscriptRelationship {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: Exon!
  object: Transcript!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type SequenceFeatureToSequenceRelationship {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: GenomicEntity!
  object: String!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type GeneRegulatoryRelationship {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: GeneOrGeneProduct!
  object: GeneOrGeneProduct!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type MolecularEvent {
}

type MolecularActivityToGeneProductAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: MolecularActivity!
  object: GeneOrGeneProduct!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type MolecularActivityToLocationAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: MolecularActivity!
  object: CellularComponent!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type MolecularActivityToBiologicalProcessAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: MolecularActivity!
  object: BiologicalProcess!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type MolecularActivityToDownstreamMolecularActivityAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: MolecularActivity!
  object: MolecularActivity!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type AnatomicalEntityToAnatomicalEntityAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: AnatomicalEntity!
  object: AnatomicalEntity!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: RelationshipType!
}

type AnatomicalEntityPartOfAnatomicalEntityAssociation {
  hasEvidenceType: EvidenceType
  providedBy: Provider
  subjectExtensions: [PropertyValuePair]
  subject: AnatomicalEntity!
  object: AnatomicalEntity!
  publications: [Publication]
  associationType: String
  hasEvidenceGraph: String
  negated: String
  label: String
  id: String!
  objectExtensions: [PropertyValuePair]
  hasEvidence: String
  qualifiers: [OntologyClass]
  relation: AnatomicalEntity!
}

type Occurrent {
}

type MolecularActivity {
}

type BiologicalProcess {
}

type CellularComponent {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type Cell {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type GrossAnatomicalStructure {
  label: String
  inTaxon: OrganismTaxon
  id: String!
}

type BioentityWithGoTerms implements HasGenomicName {
  systematicSynonym: String
  fullName: String
  regulatesClosure: [RelationshipType]
  label: String
  id: String!
  inTaxon: OrganismTaxon
  isaPartofClosure: [OntologyClass]
}

